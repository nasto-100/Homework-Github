GIT Homework 1


JSON
 4. Создать внешний репозиторий c названием JSON = Зайти в свой аккаунт, нажать "New" Repositories и создать репозиторий, копировать ссылку на него. 
 5. Клонировать репозиторий JSON на локальный компьютер = Зайти в Git Bash, находясь в нужной папке ввести команду: git clone https://github.com/nasto-100/Homework-Github.git
 6. Внутри локального JSON создать файл “new.json” = touch new.jsongit 
 7. Добавить файл под гит = git add .
 8. Закоммитить файл = git commit -m "add json file" 
 9. Отправить файл на внешний GitHub репозиторий = git push 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).Всё написать в формате JSON = 
     = vim new.json, пишем информацию о себе в формате json, далее "Esc" : wq
 11. Отправить изменения на внешний репозиторий = 
     1) git add .
     2) git commit -m "add modified json file"
     3) git push
 12. Создать файл preferences.json = > preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON =  
     = vim new.json, пишем информацию о себе в формате json, далее "Esc" : wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON =
     1) > skills.json
     2) vim new.json, пишем информацию в формате json, далее "Esc" : wq
 15. Отправить сразу 2 файла на внешний репозиторий =
     1) git add .
     2) git commit -m "add preferences and skills file"
     3) git push  
 16. На веб интерфейсе создать файл bug_report.json = 
     1) Нажимаем "Add file", далее "Create new file" 
     2) Создаем файл, пишем коммит
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе = Нажимаем "Commit new file" 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON = 
     1) Нажимаем на кнопку редактирования файла
     2) Редактируем файл, пишем коммит и нажимаем на кнопку "Commit changes" 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе = нажимаем на кнопку "Commit changes" 
 20. Синхронизировать внешний и локальный репозиторий JSON = 
     1) git fetch
     2) git pull
  
XML
 21. Создать внешний репозиторий c названием XML = Зайти в свой аккаунт, нажать "New" Repositories и создать репозиторий, копировать ссылку на него. 
 22. Клонировать репозиторий XML на локальный компьютер = Зайти в Git Bash, находясь в нужной папке ввести команду: git clone ссылка
 23. Внутри локального XML создать файл “new.xml” = > new.xml
 24. Добавить файл под гит = git add .
 25. Закоммитить файл = git commit -m "add xml file"
 26. Отправить файл на внешний GitHub репозиторий = git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
     = vim new.xml, пишем информацию о себе в формате xml, далее "Esc" : wq
 28. Отправить изменения на внешний репозиторий = 
     1) git add .
     2) git commit -m "add modified xml file"
     3) git push
 29. Создать файл preferences.xml = > preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
     = vim preferences.xml, пишем информацию о себе в формате xml, далее "Esc" : wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML = 
      1) > skills.xml
      2) vim skills.xml, пишем информацию о себе в формате xml, далее "Esc" : wq
 32. Сделать коммит в одну строку = 
      1) git add.
      2) git commit -m "add preferences and skills xml file"
 33. Отправить сразу 2 файла на внешний репозиторий = git push
 34. На веб интерфейсе создать файл bug_report.xml = 
     1) Нажимаем "Add file", далее "Create new file" 
     2) Создаем файл, пишем коммит
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе = Нажимаем "Commit new file" 
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML =
     1) Нажимаем на кнопку редактирования файла
     2) Редактируем файл, пишем коммит и нажимаем на кнопку "Commit changes"  
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе = нажимаем на кнопку "Commit changes" 
 38. Синхронизировать внешний и локальный репозиторий XML = 
     1) git fetch
     2) git pull

TXT
 1. Создать внешний репозиторий c названием TXT = Зайти в свой аккаунт, нажать "New" Repositories и создать репозиторий, копировать ссылку на него. 
 2. Клонировать репозиторий TXT на локальный компьютер = Зайти в Git Bash, находясь в нужной папке ввести команду: git clone ссылка
 3. Внутри локального TXT создать файл “new.txt” > new.xml
 4. Добавить файл под гит = git add
 5. Закоммитить файл = git commit -m "add txt file"
 6. Отправить файл на внешний GitHub репозиторий = git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT = 
    = vim new.txt, пишем информацию о себе в формате txt, далее "Esc" : wq
 8. Отправить изменения на внешний репозиторий = 
    1) git add .
    2) git commit -m "add modified txt file"
    3) git push 
 9. Создать файл preferences.txt = > preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT = 
     = vim preferences.txt, пишем информацию о себе в формате txt, далее "Esc" : wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT = 
      1) > skills.txt
      2) vim skills.txt, пишем информацию о себе в формате xml, далее "Esc" : wq
 12. Сделать коммит в одну строку
      1) git add.
      2) git commit -m "add preferences and skills xml file"
 13. Отправить сразу 2 файла на внешний репозиторий = git push
 14. На веб интерфейсе создать файл bug_report.txt = 
     1) Нажимаем "Add file", далее "Create new file" 
     2) Создаем файл, пишем коммит
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе = Нажимаем "Commit new file" 
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT = 
     1) Нажимаем на кнопку редактирования файла
     2) Редактируем файл, пишем коммит и нажимаем на кнопку "Commit changes"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе = нажимаем на кнопку "Commit changes" 
 18. Синхронизировать внешний и локальный репозиторий TXT = 
     1) git fetch
     2) git pull
